// <auto-generated />
using System;
using ConferenceAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConferenceAPI.Migrations
{
    [DbContext(typeof(ApplicationDbConnect))]
    [Migration("20250401094129_InitalMigration")]
    partial class InitalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConferenceAPI.Models.Attendee", b =>
                {
                    b.Property<int>("AttendeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendeeID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AttendeeID");

                    b.ToTable("Attendees");

                    b.HasData(
                        new
                        {
                            AttendeeID = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            AttendeeID = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith"
                        },
                        new
                        {
                            AttendeeID = 3,
                            Email = "emily.jones@example.com",
                            FirstName = "Emily",
                            LastName = "Jones"
                        });
                });

            modelBuilder.Entity("ConferenceAPI.Models.Registration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationID"));

                    b.Property<int>("AttendeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionID")
                        .HasColumnType("int");

                    b.HasKey("RegistrationID");

                    b.HasIndex("AttendeeID");

                    b.HasIndex("SessionID");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            RegistrationID = 1,
                            AttendeeID = 1,
                            RegistrationDate = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SessionID = 101
                        },
                        new
                        {
                            RegistrationID = 2,
                            AttendeeID = 2,
                            RegistrationDate = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SessionID = 102
                        },
                        new
                        {
                            RegistrationID = 3,
                            AttendeeID = 3,
                            RegistrationDate = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SessionID = 103
                        });
                });

            modelBuilder.Entity("ConferenceAPI.Models.Session", b =>
                {
                    b.Property<int>("SessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionID"));

                    b.Property<DateTime>("SessionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Speaker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SessionID");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            SessionID = 101,
                            SessionDateTime = new DateTime(2025, 4, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            SessionTitle = "Introduction to C#",
                            Speaker = "Dr. Alan Turing"
                        },
                        new
                        {
                            SessionID = 102,
                            SessionDateTime = new DateTime(2025, 4, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            SessionTitle = "Advanced SQL Queries",
                            Speaker = "Prof. Grace Hopper"
                        },
                        new
                        {
                            SessionID = 103,
                            SessionDateTime = new DateTime(2025, 4, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            SessionTitle = "IoT: The Future of Tech",
                            Speaker = "Mr. Elon Mask"
                        });
                });

            modelBuilder.Entity("ConferenceAPI.Models.Registration", b =>
                {
                    b.HasOne("ConferenceAPI.Models.Attendee", "Attendee")
                        .WithMany("Registrations")
                        .HasForeignKey("AttendeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConferenceAPI.Models.Session", "Session")
                        .WithMany("Registrations")
                        .HasForeignKey("SessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("ConferenceAPI.Models.Attendee", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("ConferenceAPI.Models.Session", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
